name: CI

on:
  push:

jobs:
  test-service:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: 15

      - name: Install dependencies
        working-directory: service
        run: yarn install

      - name: Build Packages
        working-directory: service
        run: yarn build

      - name: Run tests
        working-directory: service
        run: yarn test

  plan-service:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
      TF_VAR_region: eu-west-2

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: 15

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        working-directory: service
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        working-directory: service
        run: terraform init

      - name: Terraform Validate
        working-directory: service
        run: terraform validate -no-color

      - name: Install dependencies
        working-directory: service
        run: yarn install

      - name: Build service
        working-directory: service
        run: yarn build

      - name: Terraform Plan
        working-directory: service
        run: terraform plan -no-color

  e2e:
    runs-on: ubuntu-latest
    needs:
      - plan-service
      - test-service
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      TF_VAR_region: us-east-2

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: 15

      - uses: hashicorp/setup-terraform@v1

      - name: Tag-based config
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV
          echo TF_VAR_stage=ci-${GITHUB_RUN_ID} >> $GITHUB_ENV

      - name: Build service
        working-directory: service
        run: |
          yarn install
          yarn build

      - name: Install e2e dependencies
        working-directory: e2e
        run: yarn install

      - name: Deploy service
        working-directory: service
        run: |
          terraform init
          terraform workspace new ${TF_VAR_stage} || terraform workspace select ${TF_VAR_stage}
          terraform plan -no-color
          terraform apply -auto-approve -no-color

      - name: Generate Outputs
        working-directory: e2e
        run: terraform -chdir=../service output -json > env.json

      - name: Run tests
        working-directory: e2e
        run: yarn test

      - name: Destroy service
        if: ${{ always() }}
        working-directory: service
        run: terraform destroy -auto-approve -no-color
